{
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "App"
        ]
      }
    },
    "/api/exercises": {
      "post": {
        "operationId": "ExerciseController_createExercise",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The exercise has been successfully created!"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "The type field cannot be empty."
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "example": "There's another exercise with the same definitions. Check the error log for more details."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Exercises"
        ]
      },
      "get": {
        "operationId": "ExerciseController_fetchExercises",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The exercises have been fetched."
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "There are no exercises to show."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Exercises"
        ]
      }
    },
    "/api/exercises/query": {
      "get": {
        "operationId": "ExerciseController_fetchExercisesByQuery",
        "parameters": [
          {
            "name": "level",
            "required": false,
            "in": "query",
            "schema": {
              "title": "Level",
              "example": "A1",
              "type": "string"
            }
          },
          {
            "name": "difficulty",
            "required": false,
            "in": "query",
            "schema": {
              "title": "Difficulty",
              "example": "EASY",
              "type": "string"
            }
          },
          {
            "name": "quizId",
            "required": false,
            "in": "query",
            "schema": {
              "title": "QuizID",
              "example": "3db18797-e514-40ac-9a2e-52927016476d",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The exercise has been successfully fetched."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Validation failed (uuid is expected)"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The exercise was not found or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Exercises"
        ]
      }
    },
    "/api/exercises/{id}": {
      "get": {
        "operationId": "ExerciseController_fetchExerciseById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The exercise has been successfully fetched."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Validation failed (numeric string is expected)"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The exercise was not found or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Exercises"
        ]
      },
      "patch": {
        "operationId": "ExerciseController_updateExercise",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The exercise has been successfully updated!"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Validation failed (numeric string is expected)"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The exercise was not found or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Exercises"
        ]
      },
      "delete": {
        "operationId": "ExerciseController_deleteExercise",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The exercise has been deleted."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Validation failed (numeric string is expected)"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The exercise was not found or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Exercises"
        ]
      }
    },
    "/api/download": {
      "get": {
        "operationId": "S3Controller_getObject",
        "parameters": [
          {
            "name": "url",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The object has been successfully fetched."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "S3"
        ]
      }
    },
    "/api/upload": {
      "post": {
        "operationId": "S3Controller_putObject",
        "parameters": [
          {
            "name": "key",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The object has been successfully uploaded."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "S3"
        ]
      }
    },
    "/api/delete": {
      "delete": {
        "operationId": "S3Controller_deleteObject",
        "parameters": [
          {
            "name": "key",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The object has been successfully deleted."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "S3"
        ]
      }
    },
    "/api/quizzes": {
      "post": {
        "operationId": "QuizController_createQuiz",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The quiz has been successfully created!"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "The level is invalid."
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "example": "This quiz already exists."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Quizzes"
        ]
      },
      "get": {
        "operationId": "QuizController_fetchQuizzes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The quizzes have been successfully fetched!"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The are no quizzes to show."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Quizzes"
        ]
      }
    },
    "/api/quizzes/query": {
      "get": {
        "operationId": "QuizController_fetchQuizzesByQuery",
        "parameters": [
          {
            "name": "level",
            "required": false,
            "in": "query",
            "schema": {
              "title": "Level",
              "example": "A1",
              "type": "string"
            }
          },
          {
            "name": "difficulty",
            "required": false,
            "in": "query",
            "schema": {
              "title": "Difficulty",
              "example": "MEDIUM",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The quizzes have been successfully fetched!"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "The difficulty is invalid."
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "There are no quizzes to show."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Quizzes"
        ]
      }
    },
    "/api/quizzes/{id}": {
      "get": {
        "operationId": "QuizController_fetchQuizById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The quiz has been successfully fetched!"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Validation failed (uuid is expected)"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The quiz was not found or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Quizzes"
        ]
      },
      "patch": {
        "operationId": "QuizController_updateQuiz",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The quiz was successfully updated."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "The difficulty is invalid."
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The quiz was not found or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Quizzes"
        ]
      },
      "delete": {
        "operationId": "QuizController_deleteQuiz",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The quiz was successfully deleted."
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The quiz was not found or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Quizzes"
        ]
      }
    },
    "/api/quizzes/exercise/add": {
      "patch": {
        "operationId": "QuizController_addExercise",
        "parameters": [
          {
            "name": "quizId",
            "required": true,
            "in": "query",
            "schema": {
              "title": "QuizID",
              "example": "208af6ff-e969-408b-b7d2-0b12c847c29e",
              "type": "string"
            }
          },
          {
            "name": "exerciseId",
            "required": true,
            "in": "query",
            "schema": {
              "title": "ExerciseID",
              "example": 2,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The exercise has been successfully added!"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "The quizId field must not be empty."
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The quiz was not found or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Quizzes"
        ]
      }
    },
    "/api/quizzes/exercise/remove": {
      "delete": {
        "operationId": "QuizController_removeExercise",
        "parameters": [
          {
            "name": "quizId",
            "required": true,
            "in": "query",
            "schema": {
              "title": "QuizID",
              "example": "208af6ff-e969-408b-b7d2-0b12c847c29e",
              "type": "string"
            }
          },
          {
            "name": "exerciseId",
            "required": true,
            "in": "query",
            "schema": {
              "title": "ExerciseID",
              "example": 2,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The exercise has been successfully removed!"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "The quizId field must not be empty."
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The quiz was not found or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Quizzes"
        ]
      }
    },
    "/api/answers/e": {
      "post": {
        "operationId": "AnsweredExerciseController_saveAnswer",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveAnswerDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The answer has been successfully saved."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "The answeredQuizId is not a valid UUID."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "AnsweredExercise"
        ]
      },
      "get": {
        "operationId": "AnsweredExerciseController_fetchAnswers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The answers have been successfully fetched."
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "There are no answers to show."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "AnsweredExercise"
        ]
      }
    },
    "/api/answers/e/query": {
      "get": {
        "operationId": "AnsweredExerciseController_fetchAnswersByUser",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The answers were successfully fetched."
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "There are no answers to show or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "AnsweredExercise"
        ]
      }
    },
    "/api/answers/e/{id}": {
      "get": {
        "operationId": "AnsweredExerciseController_fetchAnswerById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The answer was successfully fetched."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Validation failed (uuid is expected)"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The answer was not found or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "AnsweredExercise"
        ]
      },
      "patch": {
        "operationId": "AnsweredExerciseController_addFeedback",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFeedbackDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The answer was successfully updated."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Validation failed (uuid is expected)"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The answer was not found or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "AnsweredExercise"
        ]
      },
      "delete": {
        "operationId": "AnsweredExerciseController_deleteAnswer",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The answer was successfully deleted."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Validation failed (uuid is expected)"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The answer was not found or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "AnsweredExercise"
        ]
      }
    },
    "/api/users": {
      "post": {
        "operationId": "UserController_registerUser",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The user has been successfully registered!"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "The password must be at least 8 characters long and contain at least 1 lowercase letter, 1 uppercase letter, 1 number and 1 symbol."
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "example": "The user already exists."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      },
      "get": {
        "operationId": "UserController_fetchUsers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The user list has been successfully fetched!"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "There are no users to show."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users/query": {
      "get": {
        "operationId": "UserController_fetchUserByEmail",
        "parameters": [
          {
            "name": "email",
            "required": true,
            "in": "query",
            "schema": {
              "title": "Email",
              "example": "john.doe@mail.com",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The user has been successfully fetched!"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "The email field must be a valid email (example: user@mail.com)"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The user was not found or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users/{id}": {
      "get": {
        "operationId": "UserController_fetchUserById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The user has been successfully fetched!"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "The email field must be a valid email (example: user@mail.com)"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The user was not found or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      },
      "patch": {
        "operationId": "UserController_updateUser",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The user has been successfully updated."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Validation failed (uuid is expected)"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The user was not found or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      },
      "delete": {
        "operationId": "UserController_deleteUser",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The user has been successfully deleted."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Validation failed (uuid is expected)"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The user was not found or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/api/answers/q": {
      "post": {
        "operationId": "AnsweredQuizController_saveAnswer",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveQuizAnswerDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The answer has been successfully saved."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "The quizId field must be a valid UUID."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "AnsweredQuizzes"
        ]
      },
      "get": {
        "operationId": "AnsweredQuizController_fetchAnswers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The answers have been successfully fetched!"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "There are no answers to show or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "AnsweredQuizzes"
        ]
      }
    },
    "/api/answers/q/query": {
      "get": {
        "operationId": "AnsweredQuizController_fetchAnswersByUser",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The answers have been successfully fetched!"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Validation failed (uuid is expected)"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "There are no answers to show or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "AnsweredQuizzes"
        ]
      }
    },
    "/api/answers/q/{id}": {
      "get": {
        "operationId": "AnsweredQuizController_fetchAnswerById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The answer has been successfully fetched!"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Validation failed (uuid is expected)"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The answer was not found or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "AnsweredQuizzes"
        ]
      },
      "patch": {
        "operationId": "AnsweredQuizController_addFeedback",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddFeedbackDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The answer has been successfully updated!"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Validation failed (uuid is expected)"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The answer was not found or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "AnsweredQuizzes"
        ]
      },
      "delete": {
        "operationId": "AnsweredQuizController_deleteAnswer",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The answer has been successfully deleted."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Validation failed (uuid is expected)"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The answer was not found or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "AnsweredQuizzes"
        ]
      }
    },
    "/api/units": {
      "post": {
        "operationId": "UnitController_createUnit",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The unit has been successfully created!"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "The name field must be a string."
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The chapter was not found or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Units"
        ]
      },
      "get": {
        "operationId": "UnitController_fetchUnits",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The units have been successfully fetched."
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "There are no units to show."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Units"
        ]
      }
    },
    "/api/units/chapter": {
      "get": {
        "operationId": "UnitController_fetchByChapter",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The units have been successfully fetched."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Validation failed (uuid is expected)"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "There are no units to show."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Units"
        ]
      }
    },
    "/api/units/{id}": {
      "get": {
        "operationId": "UnitController_fetchUnitById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The unit has been successfully fetched."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Validation failed (numeric string is expected)"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The unit was not found or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Units"
        ]
      },
      "patch": {
        "operationId": "UnitController_updateUnit",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The unit has been successfully updated!"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The unit was not found or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Units"
        ]
      },
      "delete": {
        "operationId": "UnitController_deleteUnit",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The unit has been successfully deleted!"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The unit was not found or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Units"
        ]
      }
    },
    "/api/tags/add": {
      "post": {
        "operationId": "TagController_addTag",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddOrRemoveTagDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The tag has been successfully added."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Please, check the request. Either the tag or the desired content do not exist"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "Please, check the request. Either the tag or the desired content do not exist"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Tags"
        ]
      }
    },
    "/api/tags": {
      "post": {
        "operationId": "TagController_createTag",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTagDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The tag has been successfully created!"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "The title field must be a string."
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "example": "There is another tag with the same name."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Tags"
        ]
      },
      "get": {
        "operationId": "TagController_fetchTags",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The tags have been successfully fetched."
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "There are no tags to show."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Tags"
        ]
      }
    },
    "/api/tags/query": {
      "get": {
        "operationId": "TagController_fetchContentByTag",
        "parameters": [
          {
            "name": "title",
            "required": true,
            "in": "query",
            "schema": {
              "title": "Title",
              "example": "present simple",
              "type": "string"
            }
          },
          {
            "name": "contentType",
            "required": false,
            "in": "query",
            "schema": {
              "title": "ContentType",
              "example": "exercise",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The tag has been successfully fetched."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "The title field must be a string."
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The tag was not found or the title is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Tags"
        ]
      }
    },
    "/api/tags/{id}": {
      "get": {
        "operationId": "TagController_fetchTagById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The tag has been successfully fetched."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Validation failed (numeric string is expected)"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The tag was not found or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Tags"
        ]
      },
      "delete": {
        "operationId": "TagController_deleteTag",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The tag has been successfully deleted."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Validation failed (numeric string is expected)"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The tag was not found or the id is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Tags"
        ]
      }
    },
    "/api/tags/remove": {
      "delete": {
        "operationId": "TagController_removeTag",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddOrRemoveTagDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The tag has been successfully deleted."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Invalid content type."
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The tag is not added to the content."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Tags"
        ]
      }
    },
    "/api/videos": {
      "post": {
        "operationId": "VideoController_generateVideo",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The video file has been successfully generated!"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Videos"
        ]
      },
      "get": {
        "operationId": "VideoController_fetchVideos",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The videos have been successfully fetched!"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The are no videos to show."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Videos"
        ]
      }
    },
    "/api/videos/{id}": {
      "get": {
        "operationId": "VideoController_fetchVideoById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The video has been successfully fetched!"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Validation failed (uuid is expected)"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The video was not found or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Videos"
        ]
      },
      "patch": {
        "operationId": "VideoController_updateVideo",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The video has been successfully updated!"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The video was not found or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Videos"
        ]
      },
      "delete": {
        "operationId": "VideoController_deleteVideo",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The video has been successfully deleted!"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The video was not found or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Videos"
        ]
      }
    },
    "/api/chapters": {
      "post": {
        "operationId": "ChapterController_generateChapter",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The chapter has been successfully generated!"
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "example": "There is another chapter with the same definitions."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Chapters"
        ]
      },
      "get": {
        "operationId": "ChapterController_fetchChapters",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The chapters have been successfully fetched!"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The are no chapters to show."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Chapters"
        ]
      }
    },
    "/api/chapters/{id}": {
      "get": {
        "operationId": "ChapterController_fetchChapterById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The chapter has been successfully fetched!"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Validation failed (uuid is expected)"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The chapter was not found or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Chapters"
        ]
      },
      "patch": {
        "operationId": "ChapterController_updateChapter",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The chapter has been successfully updated!"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The chapter was not found or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Chapters"
        ]
      },
      "delete": {
        "operationId": "ChapterController_deleteChapter",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The chapter has been successfully deleted!"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The chapter was not found or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Chapters"
        ]
      }
    },
    "/api/users/chapters": {
      "post": {
        "operationId": "UserChapterController_generateUserChapter",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateUserChapterDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The user progress has been successfully generated!"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The userId or the chapterId are invalid."
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "example": "There is another user progress with the same definitions."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "UserChapter"
        ]
      }
    },
    "/api/users/chapters/fetch/{userId}": {
      "get": {
        "operationId": "UserChapterController_fetchUserChaptersByUser",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The user progresses have been successfully fetched!"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Validation failed (uuid is expected)"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "There are no progresses to show or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "UserChapter"
        ]
      }
    },
    "/api/users/chapters/all": {
      "get": {
        "operationId": "UserChapterController_fetchUserChapters",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The user progresses have been successfully fetched!"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The are no user progresses to show."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "UserChapter"
        ]
      }
    },
    "/api/users/chapters/{id}": {
      "get": {
        "operationId": "UserChapterController_fetchUserChapterById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The user progress has been successfully fetched!"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Validation failed (uuid is expected)"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The user progress was not found or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "UserChapter"
        ]
      },
      "delete": {
        "operationId": "UserChapterController_deleteUserChapter",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The user progress has been successfully deleted!"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Validation failed (uuid is expected)"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The user progress was not found or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "UserChapter"
        ]
      }
    },
    "/api/users/chapters/query": {
      "patch": {
        "operationId": "UserChapterController_updateUserChapter",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserChapterDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The user progress has been successfully updated!"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Validation failed (uuid is expected)"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The user progress was not found or the IDs are invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "UserChapter"
        ]
      }
    },
    "/api/notifications": {
      "post": {
        "operationId": "NotificationController_generateNotification",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateNotificationDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "A new notification has been generated!"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "The type field is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Notifications"
        ]
      },
      "get": {
        "operationId": "NotificationController_fetchNotifications",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The notifications have been successfully fetched."
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "There are no notifications to show."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Notifications"
        ]
      }
    },
    "/api/notifications/{id}": {
      "get": {
        "operationId": "NotificationController_fetchNotificationById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The notification has been successfully fetched."
              }
            }
          },
          "400": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "Validation failed (numeric string is expected)"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The notification was not found or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Notifications"
        ]
      },
      "patch": {
        "operationId": "NotificationController_updateNotification",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNotificationDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The notification has been successfully updated."
              }
            }
          },
          "400": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "Validation failed (numeric string is expected)"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The notification was not found or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Notifications"
        ]
      },
      "delete": {
        "operationId": "NotificationController_deleteNotification",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The notification has been deleted."
              }
            }
          },
          "400": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "Validation failed (numeric string is expected)"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The notification was not found or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Notifications"
        ]
      }
    },
    "/api/users/notifications": {
      "post": {
        "operationId": "UserNotificationController_generateUserNotification",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/generateUserNotificationDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "A new notification has been generated!"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "The userId field must be a UUID."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "UserNotifications"
        ]
      }
    },
    "/api/users/notifications/query": {
      "get": {
        "operationId": "UserNotificationController_fetchUserNotifications",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The notifications have been successfully fetched."
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "There are no notifications to show."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "UserNotifications"
        ]
      }
    },
    "/api/users/notifications/update": {
      "patch": {
        "operationId": "UserNotificationController_updateUserNotification",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserNotificationDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The notification has been updated!"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "Please, check the request. Either the user or the desired notification do not exist"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "UserNotifications"
        ]
      }
    },
    "/api/users/notifications/{id}": {
      "delete": {
        "operationId": "UserNotificationController_deleteUserNotification",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The notification has been deleted."
              }
            }
          },
          "400": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "Validation failed (uuid is expected)"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The notification was not found or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "UserNotifications"
        ]
      }
    },
    "/api/users/units": {
      "post": {
        "operationId": "UserUnitController_generateUserUnit",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateUserUnitDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The user progress has been successfully generated!"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "The userId field must be a UUID."
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The userId or the chapterId are invalid."
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "example": "There is another user progress with the same definitions."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "UserUnits"
        ]
      }
    },
    "/api/users/units/query": {
      "get": {
        "operationId": "UserUnitController_fetchUserUnitByQuery",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The user progress has been successfully fetched!"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The user progress was not found or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "UserUnits"
        ]
      }
    },
    "/api/users/units/all": {
      "get": {
        "operationId": "UserUnitController_fetchUserUnits",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The user progresses have been successfully fetched!"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The are no user progresses to show."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "UserUnits"
        ]
      }
    },
    "/api/users/units/{id}": {
      "get": {
        "operationId": "UserUnitController_fetchUserUnitById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The user progress has been successfully fetched!"
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "UserUnits"
        ]
      },
      "delete": {
        "operationId": "UserUnitController_deleteUserUnit",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The user progress has been successfully deleted!"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The user progress was not found or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "UserUnits"
        ]
      }
    },
    "/api/users/units/update": {
      "patch": {
        "operationId": "UserUnitController_updateUserUnit",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserUnitDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The user progresses have been successfully fetched!"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "There are no user progresses to show."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "UserUnits"
        ]
      }
    },
    "/auth/admin/login": {
      "post": {
        "operationId": "AuthController_adminLogin",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "Administrator successfully logged in."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Please check the request. Either the user or the password are incorrect."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "User successfully logged in!"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Please check the request. Either the user or the password are incorrect."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/register": {
      "post": {
        "operationId": "AuthController_register",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "We have sent you an email with a link to confirm your email address."
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "example": "The user already exists."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/registered": {
      "patch": {
        "operationId": "AuthController_emailConfirmed",
        "parameters": [
          {
            "name": "token",
            "required": true,
            "in": "query",
            "schema": {
              "title": "Token",
              "example": "#hd)@jl4k019d0KKL",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "User successfully logged in!"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "The token is expired."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/logout": {
      "get": {
        "operationId": "AuthController_logout",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "User successfully logged out."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/reset/password": {
      "patch": {
        "operationId": "AuthController_updatePassword",
        "parameters": [
          {
            "name": "token",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updatePasswordDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "Your password has been successfully updated. If you were logged in, for security reasons, you have been logged out."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "The token is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      },
      "post": {
        "operationId": "AuthController_generatePasswordResetToken",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateResetTokenDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "If the email is correctly registered, you should have received a link to reset your password."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/reset/email": {
      "patch": {
        "operationId": "AuthController_updateEmail",
        "parameters": [
          {
            "name": "token",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "Your email has been successfully updated. For security reasons, you have been logged out."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Invalid email. Check the request."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      },
      "post": {
        "operationId": "AuthController_generateEmailResetToken",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateResetTokenDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "If the email is correct, you should have received a link to reset your email."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/student-session": {
      "get": {
        "operationId": "AuthController_checkStudentSession",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/admin-session": {
      "get": {
        "operationId": "AuthController_checkAdminSession",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/videos/progress": {
      "post": {
        "operationId": "VideoProgressController_generateVideoProgress",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateVideoProgressDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "Progress connection has been successfully generated."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "The userId field must not be empty."
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "example": "The progress connection already exists."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "VideoProgress"
        ]
      }
    },
    "/api/videos/progress/user/{userId}": {
      "get": {
        "operationId": "VideoProgressController_fetchVideoProgressesByUser",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The progress connections have been successfully fetched!"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Validation failed (uuid is expected)"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "There are no progress connections to show or the userId is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "VideoProgress"
        ]
      }
    },
    "/api/videos/progress/all": {
      "get": {
        "operationId": "VideoProgressController_fetchVideoProgresses",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The progress connections have been successfully fetched!"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "There are no progress connections to show."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "VideoProgress"
        ]
      }
    },
    "/api/videos/progress/{id}": {
      "get": {
        "operationId": "VideoProgressController_fetchVideoProgressById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The progress connection has been successfully fetched!"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Validation failed (numeric string is expected)"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The progress connection was not found or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "VideoProgress"
        ]
      },
      "delete": {
        "operationId": "VideoProgressController_deleteProgress",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The progress connection has been successfully deleted."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Validation failed (numeric string is expected)"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The progress connection was not found or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "VideoProgress"
        ]
      }
    },
    "/api/videos/progress/update": {
      "patch": {
        "operationId": "VideoProgressController_updateProgress",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateVideoProgressDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The progress connection has been successfully updated."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Validation failed (numeric string is expected)"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The progress connection was not found or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "VideoProgress"
        ]
      }
    },
    "/api/dashboard": {
      "get": {
        "operationId": "DashboardController_fetchInfo",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Dashboard"
        ]
      }
    },
    "/api/logs": {
      "get": {
        "operationId": "LoginLogController_fetchLogs",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "Logs successfully fetched."
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "There are no logs to show."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "LoginLog"
        ]
      }
    },
    "/api/logs/user/{userId}": {
      "get": {
        "operationId": "LoginLogController_fetchUserLogs",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "Logs successfully fetched."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Validation failed (uuid is expected)"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "There are no logs to show or the userId is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "LoginLog"
        ]
      }
    },
    "/api/logs/month": {
      "get": {
        "operationId": "LoginLogController_fetchMonthlyLogs",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "Logs successfully fetched."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Validation failed (uuid is expected)"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "There are no logs to show."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "LoginLog"
        ]
      }
    },
    "/api/logs/today": {
      "get": {
        "operationId": "LoginLogController_fetchTodayLogs",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "Logs successfully fetched."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Validation failed (uuid is expected)"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "There are no logs to show."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "LoginLog"
        ]
      }
    },
    "/api/user-progress/{userId}": {
      "get": {
        "operationId": "UserProgressController_fetchProgress",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The progress has been successfully fetched!"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Validation failed (uuid is expected)"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "UserProgress"
        ]
      }
    },
    "/api/slideshow": {
      "post": {
        "operationId": "SlideshowController_generateSlideshow",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateSlideShowDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "example": "The slideshow has been created!"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Validation failed (numeric string is expected)"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Slideshow"
        ]
      },
      "get": {
        "operationId": "SlideshowController_fetchSlideshows",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The slideshows have been fetched."
              }
            }
          },
          "404": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "There are no slideshows to show."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Slideshow"
        ]
      }
    },
    "/api/slideshow/{slideshowId}": {
      "get": {
        "operationId": "SlideshowController_fetchSlideshowById",
        "parameters": [
          {
            "name": "slideshowId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The slideshow has been fetched."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Validation failed (uuid is expected)"
              }
            }
          },
          "404": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "The ID is invalid or the slideshow does not exist."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Slideshow"
        ]
      },
      "delete": {
        "operationId": "SlideshowController_deleteSlideshow",
        "parameters": [
          {
            "name": "slideshowId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The slideshow has been deleted."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Validation failed (uuid is expected)"
              }
            }
          },
          "404": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "The ID is invalid or the slideshow does not exist."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Slideshow"
        ]
      }
    },
    "/api/slideshow/slides": {
      "post": {
        "operationId": "SlideController_generateSlide",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateSlideDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "example": "The slide has been created!"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "The slideshowId field must be a UUUID."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Slide"
        ]
      }
    },
    "/api/slideshow/slides/{slideId}": {
      "patch": {
        "operationId": "SlideController_updateSlide",
        "parameters": [
          {
            "name": "slideId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSlideDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The slide has been updated."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Validation failed (uuid is expected)"
              }
            }
          },
          "404": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "The ID is invalid or the slide does not exist."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Slide"
        ]
      },
      "delete": {
        "operationId": "SlideController_deleteSlide",
        "parameters": [
          {
            "name": "slideId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The slide has been deleted."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Validation failed (uuid is expected)"
              }
            }
          },
          "404": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "The ID is invalid or the slide does not exist."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Slide"
        ]
      }
    },
    "/api/slideshow/progress": {
      "post": {
        "operationId": "SlideshowProgressController_generateProgress",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateProgressDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "example": "The progress has been created!"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "The userId field must not be empty."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "SlideshowProgress"
        ]
      }
    },
    "/api/slideshow/progress/user/{userId}": {
      "get": {
        "operationId": "SlideshowProgressController_fetchProgressesByUser",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The progresses have been fetched."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Validation failed (uuid is expected)"
              }
            }
          },
          "404": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "There are no progresses to show."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "SlideshowProgress"
        ]
      }
    },
    "/api/slideshow/progress/id/{progressId}": {
      "get": {
        "operationId": "SlideshowProgressController_fetchSlideshowById",
        "parameters": [
          {
            "name": "progressId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The progress has been fetched."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Validation failed (uuid is expected)"
              }
            }
          },
          "404": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "The ID is invalid or the progress does not exist."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "SlideshowProgress"
        ]
      }
    },
    "/api/slideshow/progress/all": {
      "get": {
        "operationId": "SlideshowProgressController_fetchProgresses",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The progresses have been fetched."
              }
            }
          },
          "404": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "There are no progresses to show."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "SlideshowProgress"
        ]
      }
    },
    "/api/slideshow/progress/{slideshowId}": {
      "patch": {
        "operationId": "SlideshowProgressController_updateProgress",
        "parameters": [
          {
            "name": "slideshowId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProgressDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The progress has been updated."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Validation failed (uuid is expected)"
              }
            }
          },
          "404": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "The ID is invalid or the progress does not exist."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "SlideshowProgress"
        ]
      },
      "delete": {
        "operationId": "SlideshowProgressController_deleteProgress",
        "parameters": [
          {
            "name": "slideshowId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The progress has been deleted."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Validation failed (uuid is expected)"
              }
            }
          },
          "404": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "The ID is invalid or the progress does not exist."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "SlideshowProgress"
        ]
      }
    },
    "/api/contents": {
      "post": {
        "operationId": "ContentController_createContent",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContentDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "example": "The content has been successfully created!"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "The contentType field is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Content"
        ]
      },
      "get": {
        "operationId": "ContentController_fetchContents",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The contents have successfully been fetched."
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "example": "There are no contents to show."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Content"
        ]
      }
    },
    "/api/contents/unit/{unitId}": {
      "get": {
        "operationId": "ContentController_fetchContentsByUnit",
        "parameters": [
          {
            "name": "unitId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The contents have successfully been fetched."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Validation failed (numeric string is expected)"
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "example": "There are no contents to show."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Content"
        ]
      }
    },
    "/api/contents/{id}": {
      "delete": {
        "operationId": "ContentController_deleteContent",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The content has been deleted."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Validation failed (numeric string is expected)"
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "example": "The content was not found or the ID is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "Content"
        ]
      }
    },
    "/api/user/contents": {
      "post": {
        "operationId": "UserContentController_createUserContent",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserContentDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The progress has been successfully registered."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "The userId field must not be empty."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "UserContent"
        ]
      },
      "get": {
        "operationId": "UserContentController_fetchUserContentsByUser",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The progresses have been successfully fetched."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "The userId field must not be empty."
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "There are no progresses to show or the userId is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "UserContent"
        ]
      }
    },
    "/api/user/contents/all": {
      "get": {
        "operationId": "UserContentController_fetchUserContents",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The progresses have been successfully fetched."
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "There are no progresses to show."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "UserContent"
        ]
      }
    },
    "/api/user/contents/{id}": {
      "patch": {
        "operationId": "UserContentController_updateUserContent",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserContentDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The progress has been successfully updated."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "The userId field must not be empty."
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The progress was not found or the id is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "UserContent"
        ]
      },
      "delete": {
        "operationId": "UserContentController_deleteUserContent",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": "The progress has been successfully delete."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "Validation failed (numeric string is expected)"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The progress was not found or the id is invalid."
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": "An unexpected error occurred. Please check the error log for more information."
              }
            }
          }
        },
        "tags": [
          "UserContent"
        ]
      }
    }
  },
  "info": {
    "title": "English Conversations API",
    "description": "REST API for managing English Conversations' data and processes.",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "schemas": {
      "SaveAnswerDTO": {
        "type": "object",
        "properties": {
          "exerciseId": {
            "type": "number",
            "title": "ExerciseID",
            "example": 1
          },
          "userId": {
            "type": "string",
            "title": "UserID",
            "example": "fa7f094c-be3a-4c1f-9369-957f7d91d05b"
          },
          "answeredQuizId": {
            "type": "string",
            "title": "AnsweredQuizID",
            "example": "fa7f094c-be3a-4c1f-9369-957f7d91d05b"
          },
          "isRetry": {
            "type": "boolean",
            "title": "IsRetry",
            "example": true
          },
          "selectedAnswers": {
            "type": "array",
            "title": "selectedAnswers",
            "example": [
              "are",
              "am"
            ]
          },
          "textAnswer": {
            "type": "string",
            "title": "TextAnswer",
            "example": "jump"
          },
          "isCorrectAnswer": {
            "type": "boolean",
            "title": "IsCorrectAnswer",
            "example": true
          },
          "feedback": {
            "type": "string",
            "title": "Feedback",
            "example": "Great job!"
          },
          "elapsedTime": {
            "type": "number",
            "title": "ElapsedTime",
            "description": "time in seconds",
            "example": 120
          }
        },
        "required": [
          "exerciseId",
          "userId",
          "elapsedTime"
        ]
      },
      "UpdateFeedbackDTO": {
        "type": "object",
        "properties": {
          "feedback": {
            "type": "string",
            "title": "Feedback",
            "example": "Great job!"
          }
        },
        "required": [
          "feedback"
        ]
      },
      "SaveQuizAnswerDTO": {
        "type": "object",
        "properties": {
          "quizId": {
            "type": "string",
            "title": "Quiz ID",
            "example": "f0aaa9ad-ee8e-42f0-a823-c90f2d255f5a"
          },
          "userId": {
            "type": "string",
            "title": "UserID",
            "example": "f0aaa9ad-ee8e-42f0-a823-c90f2d255f5a"
          },
          "score": {
            "type": "number",
            "title": "Score",
            "example": 10
          },
          "feedback": {
            "type": "string",
            "title": "Feedback",
            "example": "Congrats!"
          },
          "elapsedTime": {
            "type": "number",
            "title": "Elapsed Time",
            "example": 15000
          },
          "isRetry": {
            "type": "boolean",
            "title": "Is Retry",
            "example": false
          },
          "userContentId": {
            "type": "number",
            "title": "UserContentId",
            "example": 2
          }
        },
        "required": [
          "quizId",
          "userId",
          "score",
          "elapsedTime",
          "userContentId"
        ]
      },
      "AddFeedbackDTO": {
        "type": "object",
        "properties": {
          "feedback": {
            "type": "string",
            "title": "Feedback",
            "example": "Congrats!"
          }
        },
        "required": [
          "feedback"
        ]
      },
      "AddOrRemoveTagDTO": {
        "type": "object",
        "properties": {
          "contentType": {
            "type": "string",
            "title": "ContentType",
            "example": "exercise"
          },
          "tagId": {
            "type": "number",
            "title": "TagId",
            "example": 1
          },
          "exerciseId": {
            "type": "number",
            "title": "ExerciseID",
            "example": 2
          },
          "quizId": {
            "type": "string",
            "title": "QuizID",
            "example": "8ff86be5-5b94-4b73-865f-105b08d1d4f6"
          },
          "unitId": {
            "type": "number",
            "title": "UnitID",
            "example": 4
          },
          "videoId": {
            "type": "string",
            "title": "videoID",
            "example": "8ff86be5-5b94-4b73-865f-105b08d1d4f6"
          }
        },
        "required": [
          "contentType",
          "tagId"
        ]
      },
      "CreateTagDTO": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "title": "Title",
            "example": "present simple"
          }
        },
        "required": [
          "title"
        ]
      },
      "GenerateUserChapterDTO": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "title": "UserID",
            "example": "d664a811-8dd1-4059-995a-3a01cba282a9"
          },
          "chapterId": {
            "type": "string",
            "title": "ChapterID",
            "example": "d664a811-8dd1-4059-995a-3a01cba282a9"
          }
        },
        "required": [
          "userId",
          "chapterId"
        ]
      },
      "UpdateUserChapterDTO": {
        "type": "object",
        "properties": {}
      },
      "GenerateNotificationDTO": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "title": "Type",
            "example": "INFO"
          },
          "title": {
            "type": "string",
            "title": "Title",
            "example": "Congratulations!"
          },
          "content": {
            "type": "string",
            "title": "Content",
            "example": "You have just completed chapter A1!"
          },
          "actionUrl": {
            "type": "string",
            "title": "ActionURL",
            "example": "https://google.com"
          },
          "expirationDate": {
            "type": "string",
            "title": "ExpirationDate",
            "example": "2025-07-16"
          }
        },
        "required": [
          "type",
          "title"
        ]
      },
      "UpdateNotificationDTO": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "title": "Type",
            "example": "INFO"
          },
          "title": {
            "type": "string",
            "title": "Title",
            "example": "Congratulations!"
          },
          "content": {
            "type": "string",
            "title": "Content",
            "example": "You have just completed chapter A1!"
          },
          "actionUrl": {
            "type": "string",
            "title": "ActionURL",
            "example": "https://google.com"
          },
          "expirationDate": {
            "type": "string",
            "title": "ExpirationDate",
            "example": "2025-07-16"
          }
        },
        "required": [
          "type",
          "title"
        ]
      },
      "generateUserNotificationDTO": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "title": "UserID",
            "example": "$F0g9219*"
          },
          "notificationId": {
            "type": "string",
            "title": "NotificationID",
            "example": "10854fkfa8**93mNN"
          }
        },
        "required": [
          "userId",
          "notificationId"
        ]
      },
      "UpdateUserNotificationDTO": {
        "type": "object",
        "properties": {
          "isRead": {
            "type": "boolean",
            "title": "IsRead",
            "example": true
          },
          "readAt": {
            "type": "string",
            "title": "ReadAt",
            "example": "2025-10-10"
          },
          "deliveredViaEmail": {
            "type": "boolean",
            "title": "DeliveredViaEmail",
            "example": true
          },
          "deliveredViaApp": {
            "type": "boolean",
            "title": "DeliveredViaApp",
            "example": false
          }
        }
      },
      "GenerateUserUnitDTO": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "title": "UserID",
            "example": "298b17e6-14e8-4224-8bab-3c4599a00a70"
          },
          "unitId": {
            "type": "number",
            "title": "UnitID",
            "example": 1
          }
        },
        "required": [
          "userId",
          "unitId"
        ]
      },
      "UpdateUserUnitDTO": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "example": "LOCKED"
          },
          "progress": {
            "type": "number",
            "title": "Progress",
            "example": 0.5
          },
          "completedAt": {
            "type": "string",
            "title": "CompletedAt",
            "example": "2025-10-21"
          }
        }
      },
      "LoginDTO": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "title": "Email",
            "example": "john.doe@mail.com"
          },
          "password": {
            "type": "string",
            "title": "IsTest",
            "example": "#i8NNhl10@%"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "updatePasswordDTO": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "title": "Email",
            "example": "john.doe@mail.com"
          },
          "password": {
            "type": "string",
            "title": "Password",
            "example": "Em85*&kl31rD"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "GenerateResetTokenDTO": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "title": "Email",
            "example": "john.doe@mail.com"
          }
        },
        "required": [
          "email"
        ]
      },
      "GenerateVideoProgressDTO": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "title": "UserID",
            "example": "35ba4515-4ece-43f3-bb55-8a632aaaa873"
          },
          "videoId": {
            "type": "string",
            "title": "VideoID",
            "example": "47d96219-e87a-4089-8718-93b469eeb40b"
          },
          "userContentId": {
            "type": "number",
            "title": "UserContentId",
            "example": 2
          }
        },
        "required": [
          "userId",
          "videoId",
          "userContentId"
        ]
      },
      "UpdateVideoProgressDTO": {
        "type": "object",
        "properties": {
          "progress": {
            "type": "number",
            "title": "Progress",
            "example": 50
          },
          "watchedDuration": {
            "type": "number",
            "title": "WatchedDuration",
            "example": 120
          },
          "watchedCount": {
            "type": "number",
            "title": "WatchedCount",
            "example": 3
          },
          "lastWatchedAt": {
            "type": "string",
            "title": "LastWatchedAt",
            "example": "2025-06-28"
          },
          "startedAt": {
            "type": "string",
            "title": "StartedAt",
            "example": "2025-06-10"
          },
          "completedAt": {
            "type": "string",
            "title": "CompletedAt",
            "example": "2025-06-10"
          },
          "completed": {
            "type": "boolean",
            "title": "Completed",
            "example": true
          },
          "isFavorite": {
            "type": "string",
            "title": "VideoID",
            "example": "47d96219-e87a-4089-8718-93b469eeb40b"
          },
          "note": {
            "type": "string",
            "title": "VideoID",
            "example": "great video!"
          },
          "userContentId": {
            "type": "number",
            "title": "UserContentId",
            "example": 2
          }
        },
        "required": [
          "userContentId"
        ]
      },
      "GenerateSlideShowDTO": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "title": "Title",
            "example": "Unit 1 - Past Simple"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "example": "Learning past simple with ease"
          }
        },
        "required": [
          "title",
          "description"
        ]
      },
      "GenerateSlideDTO": {
        "type": "object",
        "properties": {
          "slideshowId": {
            "type": "string",
            "title": "SlideshowID",
            "example": "0df0a1e2-1347-4d19-8d93-7aa0c29f9329"
          },
          "title": {
            "type": "string",
            "title": "Title",
            "example": "Unit 1 - Past Simple"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "example": "Learn the past simple tense easily."
          },
          "type": {
            "type": "string",
            "title": "Type",
            "example": "IMAGE"
          },
          "url": {
            "type": "string",
            "title": "URL",
            "example": "https://google.com/images"
          },
          "order": {
            "type": "number",
            "title": "Order",
            "example": 1
          }
        },
        "required": [
          "slideshowId",
          "title",
          "description",
          "type",
          "url",
          "order"
        ]
      },
      "UpdateSlideDTO": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "title": "Title",
            "example": "Unit 1 - Past Simple"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "example": "Learn the past simple tense easily."
          },
          "type": {
            "type": "string",
            "title": "Type",
            "example": "IMAGE"
          },
          "url": {
            "type": "string",
            "title": "URL",
            "example": "https://google.com/images"
          },
          "order": {
            "type": "number",
            "title": "Order",
            "example": 1
          }
        },
        "required": [
          "title",
          "description",
          "type",
          "url",
          "order"
        ]
      },
      "GenerateProgressDTO": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "title": "UserID",
            "example": "393951a9-c419-489d-a25f-356db40e3b08"
          },
          "slideshowId": {
            "type": "string",
            "title": "SlideID",
            "example": "393951a9-c419-489d-a25f-356db40e3b08"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "example": "LOCKED"
          },
          "progress": {
            "type": "number",
            "title": "Progress",
            "example": 0.5
          },
          "userContentId": {
            "type": "number",
            "title": "UserContentId",
            "example": 2
          }
        },
        "required": [
          "userId",
          "slideshowId",
          "userContentId"
        ]
      },
      "UpdateProgressDTO": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "example": "LOCKED"
          },
          "progress": {
            "type": "number",
            "title": "Progress",
            "example": 0.5
          },
          "userContentId": {
            "type": "number",
            "title": "UserContentId",
            "example": 2
          }
        },
        "required": [
          "userContentId"
        ]
      },
      "CreateContentDTO": {
        "type": "object",
        "properties": {
          "unitId": {
            "type": "number",
            "title": "UnitID",
            "example": 1
          },
          "contentType": {
            "type": "string",
            "title": "ContentType",
            "example": "VIDEO"
          },
          "videoId": {
            "type": "string",
            "title": "VideoId",
            "example": "a5fb9011-1c42-4d54-a949-4c767db592a7"
          },
          "slideshowId": {
            "type": "string",
            "title": "SlideshowId",
            "example": "a5fb9011-1c42-4d54-a949-4c767db592a7"
          },
          "quizId": {
            "type": "string",
            "title": "quizId",
            "example": "a5fb9011-1c42-4d54-a949-4c767db592a7"
          }
        },
        "required": [
          "unitId",
          "contentType"
        ]
      },
      "CreateUserContentDTO": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "title": "UserID",
            "example": "a03427d5-a08f-4f32-b33f-1fd4f59b9cb8"
          },
          "contentId": {
            "type": "number",
            "title": "ContentID",
            "example": 2
          },
          "status": {
            "type": "string",
            "title": "Status",
            "example": "LOCKED"
          },
          "progress": {
            "type": "number",
            "title": "Progress",
            "example": 0.5
          }
        },
        "required": [
          "userId",
          "contentId"
        ]
      },
      "UpdateUserContentDTO": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "example": "LOCKED"
          },
          "progress": {
            "type": "number",
            "title": "Progress",
            "example": 0.5
          }
        }
      }
    }
  }
}